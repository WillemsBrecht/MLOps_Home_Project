name: mlops_runner

on:
  push:
    branches: [ main ]
  workflow_dispatch:


jobs:

  Train_AI_and_Build_API:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: 'Setup python'
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      

      - name: "Install requirements"
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          

      - name: "Azure login"  
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


      - name: 'Run step 01 - Data preparation'
        working-directory: steps
        env:
          ENV_AZURE: ${{ secrets.ENV_AZURE }}
          ENV_GENERAL : ${{ secrets.ENV_GENERAL }}
          ENV_DATA : ${{ secrets.ENV_DATA }}
        run: |
          python3 01_DataPreparing.py
          

      - name: 'Run step 02 - Model training'
        working-directory: steps
        env:
          ENV_AZURE : ${{ secrets.ENV_AZURE }}
          ENV_GENERAL : ${{ secrets.ENV_GENERAL }}
          ENV_DATA : ${{ secrets.ENV_DATA }}
          ENV_MODEL : ${{ secrets.ENV_MODEL }}
          ENV_CLUSTER : ${{ secrets.ENV_CLUSTER }}
        run: |
          python3  02_Training.py
          

      - name: 'Run step 03 - Model registration'
        working-directory: steps
        env:
          ENV_AZURE : ${{ secrets.ENV_AZURE }}
          ENV_GENERAL : ${{ secrets.ENV_GENERAL }}
          ENV_MODEL : ${{ secrets.ENV_MODEL }}
          ENV_REGISTER : ${{ secrets.ENV_REGISTER }}
        run: |
          python3  03_RegisterModel.py


      - name: 'Run step 04 - Model dowload from Azure for API build'
        working-directory: steps
        env:
          ENV_AZURE : ${{ secrets.ENV_AZURE }}
          ENV_GENERAL : ${{ secrets.ENV_GENERAL }}
          ENV_MODEL : ${{ secrets.ENV_MODEL }}
          ENV_REGISTER : ${{ secrets.ENV_REGISTER }}
        run: |
          python3  04_DownloadModel.py
      

      - name: "Save config data"
        uses: actions/upload-artifact@v2.2.3
        with:
          name: config-data
          path: tmp
          retention-days: 10
         

      - name: Create directory for fastapi image
        working-directory: api/api/app
        run: |
          mkdir images


      - name: ghcr.io login with PAT secret
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io --username WillemsBrecht --password-stdin


      - name: Build Dockerfile & Push Dockerfile to GitHub packages - version ${{ secrets.IMAGE_VERSION }}
        working-directory: api/api
        run: |
          docker build -t ghcr.io/willemsbrecht/lungsfastapi:${{ secrets.IMAGE_VERSION }} .
          docker push ghcr.io/willemsbrecht/lungsfastapi:${{ secrets.IMAGE_VERSION }}
          

      - name: Push Dockerfile to GitHub packages tagged as latest
        working-directory: api/api
        run: |
          docker tag ghcr.io/willemsbrecht/lungsfastapi:${{ secrets.IMAGE_VERSION }} ghcr.io/willemsbrecht/lungsfastapi:latest
          docker push ghcr.io/willemsbrecht/lungsfastapi:latest


  Deploy_to_cluster:
    needs: Train_AI_and_Build_API
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      
      - name: Update Kubernetes deployments with Helm Chart
        working-directory: charts
        run: |
          helm upgrade --install fastapi-lungs -n mlops-group-8 ./fastapi-lungs


      - name: Port-forward fastapi connection
        run: |
          kubectl port-forward service/fastapi-lungs-svc 8701:80 -n mlops-group-8 &


      - name: Test port-forwarded fastapi connection
        run: |
          sleep 3
          curl localhost:8701

