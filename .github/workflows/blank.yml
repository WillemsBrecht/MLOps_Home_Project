# This is a basic workflow to help you get started with Actions

name: mlops_runner

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: 'Run data prep script'
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: |
          python3 steps/01_DataPreparing.py
          
      - name: 'Run Training script'
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: |
          python3  steps/02_Training.py
          
      - name: 'Register model'
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: |
          python3  steps/03_RegisterModel.py
          
      - name: 'Deploy model'
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: |
          python3 steps/04_DeployModel.py
      
      - name: "Save config data"
        uses: actions/upload-artifact@v2.2.3
        with:
          name: config-data
          path: tmp
          retention-days: 10
          
      - name: Debugging
        working-directory: api/api/app
        run: |
          mkdir images
          ls

      # Build and run Dockerfile
      - name: Set PAT secret
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io --username WillemsBrecht --password-stdin

      - name: Build Dockerfile and push to github
        working-directory: api/api
        run: |
          docker build -t ghcr.io/willemsbrecht/lungsfastapi .
          docker push ghcr.io/willemsbrecht/lungsfastapi
          
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.1

      # Optional step if GPG signing is used
      - name: Prepare GPG key
        run: |
          gpg_dir=.cr-gpg
          mkdir "$gpg_dir"
          keyring="$gpg_dir/secring.gpg"
          base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"
          passphrase_file="$gpg_dir/passphrase"
          echo "$GPG_PASSPHRASE" > "$passphrase_file"
          echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
          echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
        env:
          GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
          GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"

      - name: Add dependency chart repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.1.0
        with:
          charts_dir: charts
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
